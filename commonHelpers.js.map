{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet userSelectedDate;\nconst refs = {\n  dateInput: document.querySelector('input#datetime-picker'),\n  startBtn: document.querySelector('button[data-start]'),\n  daySpan: document.querySelector('span[data-days]'),\n  hourSpan: document.querySelector('span[data-hours]'),\n  minSpan: document.querySelector('span[data-minutes]'),\n  secSpan: document.querySelector('span[data-seconds]'),\n};\n\nclass Timer {\n  static isActive = false;\n  constructor(onTick) {\n    this.intervalId = null;\n    this.onTick = onTick;\n  }\n\n  start() {\n   \n    Timer.isActive = true;\n    this.intervalId = setInterval(() => {\n      const currentTime = Date.now(); \n      const deltaTime = userSelectedDate - currentTime;\n      if (deltaTime <= 0) {\n        this.stop(this.intervalId);\n        return;\n      }\n      const convertedDeltaTime = this.convertMs(deltaTime);\n      const time = this.addLeadingZero(convertedDeltaTime);\n      this.onTick(time);\n    }, 1000);\n  }\n\n  stop() {\n    clearInterval(this.intervalId);\n    Timer.isActive = false;\n    refs.startBtn.disabled = false;\n  }\nconvertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n    return { days, hours, minutes, seconds };\n  }\n\n  addLeadingZero(value) {\n    const {\n      days: inputDays,\n      hours: inputHours,\n      minutes: inputMinutes,\n      seconds: inputSeconds,\n    } = value;\n    const days = inputDays.toString().padStart(2, '0');\n    const hours = inputHours.toString().padStart(2, '0');\n    const minutes = inputMinutes.toString().padStart(2, '0');\n    const seconds = inputSeconds.toString().padStart(2, '0');\n\n    return { days, hours, minutes, seconds };\n  }\n}\nconst timer = new Timer(updateClockFace);\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n   if (selectedDates[0].getTime() < Date.now()) {\n        iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n\n      refs.startBtn.disabled = true;\n      userSelectedDate = selectedDates[0].getTime();\n      return;\n    }\n      userSelectedDate = selectedDates[0].getTime();\n    if (!Timer.isActive) {\n      refs.startBtn.disabled = false;\n    }\n  },\n};\n\nconst fp = flatpickr(refs.dateInput, options);\nrefs.startBtn.addEventListener('click', () => {\n if (!userSelectedDate) {\n    return;\n  }\n  timer.start();\n  refs.startBtn.disabled = true;\n});\n\nfunction updateClockFace({ days, hours, minutes, seconds }) {\n  refs.daySpan.textContent = `${days}`;\n  refs.hourSpan.textContent = `${hours}`;\n  refs.minSpan.textContent = `${minutes}`;\n  refs.secSpan.textContent = `${seconds}`;\n}"],"names":["userSelectedDate","refs","_Timer","onTick","currentTime","deltaTime","convertedDeltaTime","time","ms","days","hours","minutes","seconds","value","inputDays","inputHours","inputMinutes","inputSeconds","Timer","__publicField","timer","updateClockFace","options","selectedDates","iziToast","flatpickr"],"mappings":"mRAKA,IAAIA,EACJ,MAAMC,EAAO,CACX,UAAW,SAAS,cAAc,uBAAuB,EACzD,SAAU,SAAS,cAAc,oBAAoB,EACrD,QAAS,SAAS,cAAc,iBAAiB,EACjD,SAAU,SAAS,cAAc,kBAAkB,EACnD,QAAS,SAAS,cAAc,oBAAoB,EACpD,QAAS,SAAS,cAAc,oBAAoB,CACtD,EAEMC,EAAN,KAAY,CAEV,YAAYC,EAAQ,CAClB,KAAK,WAAa,KAClB,KAAK,OAASA,CACf,CAED,OAAQ,CAEND,EAAM,SAAW,GACjB,KAAK,WAAa,YAAY,IAAM,CAClC,MAAME,EAAc,KAAK,MACnBC,EAAYL,EAAmBI,EACrC,GAAIC,GAAa,EAAG,CAClB,KAAK,KAAK,KAAK,UAAU,EACzB,MACD,CACD,MAAMC,EAAqB,KAAK,UAAUD,CAAS,EAC7CE,EAAO,KAAK,eAAeD,CAAkB,EACnD,KAAK,OAAOC,CAAI,CACjB,EAAE,GAAI,CACR,CAED,MAAO,CACL,cAAc,KAAK,UAAU,EAC7BL,EAAM,SAAW,GACjBD,EAAK,SAAS,SAAW,EAC1B,CACH,UAAUO,EAAI,CAKV,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAClE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACvC,CAED,eAAeC,EAAO,CACpB,KAAM,CACJ,KAAMC,EACN,MAAOC,EACP,QAASC,EACT,QAASC,CACV,EAAGJ,EACEJ,EAAOK,EAAU,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC3CJ,EAAQK,EAAW,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC7CJ,EAAUK,EAAa,SAAQ,EAAG,SAAS,EAAG,GAAG,EACjDJ,EAAUK,EAAa,SAAQ,EAAG,SAAS,EAAG,GAAG,EAEvD,MAAO,CAAE,KAAAR,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACvC,CACH,EAtDA,IAAMM,EAANhB,EACEiB,EADID,EACG,WAAW,IAsDpB,MAAME,EAAQ,IAAIF,EAAMG,CAAe,EACjCC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACtB,GAAIA,EAAc,GAAG,QAAO,EAAK,KAAK,MAAO,CACxCC,EAAS,MAAM,CACf,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,EAEDvB,EAAK,SAAS,SAAW,GACzBD,EAAmBuB,EAAc,GAAG,QAAO,EAC3C,MACD,CACCvB,EAAmBuB,EAAc,GAAG,QAAO,EACxCL,EAAM,WACTjB,EAAK,SAAS,SAAW,GAE5B,CACH,EAEWwB,EAAUxB,EAAK,UAAWqB,CAAO,EAC5CrB,EAAK,SAAS,iBAAiB,QAAS,IAAM,CACxCD,IAGJoB,EAAM,MAAK,EACXnB,EAAK,SAAS,SAAW,GAC3B,CAAC,EAED,SAASoB,EAAgB,CAAE,KAAAZ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC1DX,EAAK,QAAQ,YAAc,GAAGQ,IAC9BR,EAAK,SAAS,YAAc,GAAGS,IAC/BT,EAAK,QAAQ,YAAc,GAAGU,IAC9BV,EAAK,QAAQ,YAAc,GAAGW,GAChC"}